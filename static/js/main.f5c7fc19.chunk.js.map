{"version":3,"sources":["TextToSpeech/TextToSpeech.js","Paragraph/Paragraph.js","Slideshow/Slides.js","Slideshow/Slideshow.js","List/List.js","App.js","serviceWorker.js","index.js"],"names":["TextToSpeech","props","state","error","isLoaded","selected_voice","items","synth","voices","available_voices","window","speechSynthesis","getVoices","length","addEventListener","this","setState","event","value","target","text","index","alert","utterThis","SpeechSynthesisUtterance","lang","pitch","rate","speak","cancel","onClick","playText","selectedVoice","type","className","cancelText","React","Component","Paragraph","word","url","bookcode","id","fetch","then","res","json","result","removeNumbers","_string","replace","match","console","log","x","item","RegExp","join","test","pagenumber","e","getWordwithoutNumbers","mystyle","fontSize","localStorage","getItem","message","style","page","paragraph","getCurrentID","date1","Date","date2","difference","getTime","Math","floor","Slides","handleOnChange","booklist","imagelist","default_image","keyboard","data-wrap","data-interval","data-target","data-slide-to","map","key","src","alt","imageurl","totalimages","randomindex","random","err","title","total","href","data-slide","Slideshow","List","App","Boolean","location","hostname","Index","updateSelectedVoice","biggerFont","newsize","slide_font_size","fontsizestring","setItem","smallerFont","to","bind","exact","path","render","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.f5c7fc19.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nclass TextToSpeech extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      selected_voice: null,\r\n      items: [],\r\n      synth: null,\r\n      voices: null,\r\n      \r\n    };\r\n    \r\n  }\r\n  componentDidMount() {\r\n        var available_voices;\r\n        var synth;\r\n            \r\n        // list of languages is probably not loaded, wait for it\r\n        if(window.speechSynthesis.getVoices().length === 0) {\r\n\t        window.speechSynthesis.addEventListener('voiceschanged', function() {\r\n\t\t        available_voices = window.speechSynthesis.getVoices();\r\n                synth = window.speechSynthesis;\r\n\t        });\r\n        }\r\n        available_voices = window.speechSynthesis.getVoices();\r\n        synth = window.speechSynthesis;\r\n        this.setState({\r\n          isLoaded: true,\r\n          items: available_voices,\r\n          selected_voice: 27,\r\n          synth: synth,\r\n          voices: available_voices\r\n        });\r\n  }\r\n\r\n  handleChange(event) {\r\n        let value = event.target.value;\r\n            this.setState({\r\n              isLoaded: true,\r\n              selected_voice: value\r\n            });\r\n  }\r\n\r\n  playText(text, index){\r\n      var available_voices;\r\n      var synth;\r\n        \r\n      // list of languages is probably not loaded, wait for it\r\n      if(window.speechSynthesis.getVoices().length === 0) {\r\n        window.speechSynthesis.addEventListener('voiceschanged', function() {\r\n\t        available_voices = window.speechSynthesis.getVoices();\r\n            synth = window.speechSynthesis;\r\n        });\r\n      }\r\n      available_voices = window.speechSynthesis.getVoices();\r\n      synth = window.speechSynthesis;\r\n      alert(text);\r\n      var utterThis = new SpeechSynthesisUtterance();\r\n      utterThis.text = text;\r\n      //utterThis.voice = available_voices[0] ;\r\n      utterThis.lang = 'en-US';\r\n      utterThis.pitch = 0;\r\n      utterThis.rate = 0.7;\r\n      synth.speak(utterThis);\r\n      this.setState({synth: synth});\r\n  }\r\n\r\n  cancelText(){\r\n    alert(\"stop\");\r\n    this.state.synth.cancel();\r\n  }\r\n  \r\n\r\n  \r\n  render() {\r\n\r\n      return (\r\n        <div>\r\n          <button onClick={() => this.playText(this.props.text, this.props.selectedVoice)} type=\"button\" className=\"btn btn-primary\">play</button>\r\n          <button type=\"button\" className=\"btn btn-danger\" onClick={() => this.cancelText()}>stop</button>  \r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\n\r\nexport default TextToSpeech;\r\n","import React from 'react';\r\nimport TextToSpeech from '../TextToSpeech/TextToSpeech';\r\nimport './paragraph.css';\r\n\r\nfunction    checkIfItsABookBible(_string){\r\n\t  var bookNames = [\r\n\r\n\t\t'1 Samuel',\r\n\t\t'2 Samuel',\r\n\t\t'1 Kings',\r\n\t\t'2 Kings',\r\n\t\t'1 Chronicles',\r\n\t\t'2 Chronicles',\r\n\t\t'1 Corinthians',\r\n\t\t'2 Corinthians',\r\n\t\t'1 Thessalonians',\r\n\t\t'2 Thessalonians',\r\n\t\t'1 Timothy',\r\n\t\t'2 Timothy',\r\n\t\t'1 Peter',\r\n\t\t'2 Peter',\r\n\t\t'1 John',\r\n\t\t'2 John',\r\n\t\t'3 John'\r\n\t  ];\r\n\t  var result;\r\n\t  if (new RegExp(bookNames.join(\"|\")).test(_string)) {\r\n\t\t //alert(_string + \"is a book\");\r\n\t\t result = true;\r\n\t  }else{\r\n\t\t result = false;\r\n\t  }\r\n\t  return result;\r\n\t}\r\n\t\r\nfunction getWordwithoutNumbers(word){\r\n\t    word = word.replace(/\\n/g, \" \");\r\n        let pattern =  /\\d+\\s\\w+/g;\r\n\t\tlet result = word.match(pattern);\r\n\t\tconsole.log(word);\r\n\t\tconsole.log(\"result: \" + result);\r\n\t\ttry{\r\n\t\t\tfor (var x=0; x<result.length;x++){\r\n\t\t\t   var item = result[x];\r\n\t\t\t   if (checkIfItsABookBible(item)){\r\n\t\t\t   }else{\r\n\t\t\t\t let pattern = /\\d+/g;\r\n\t\t\t\t var pagenumber = item.match(pattern); \r\n\t\t\t\t word = word.replace(pagenumber, \" \" );\r\n\r\n\t\t\t   };\r\n\t\t\t}\r\n\t\t}catch(e){\r\n\t\t  //alert(word + e);\r\n\t\t}\r\n\t\treturn word;\r\n}\r\nclass Paragraph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      word: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const url = \"https://gesab001.github.io/assets/egw/\"+this.props.bookcode+\"/\"+\"book_\"+this.props.bookcode+\"_id_\"+this.props.id+\".json\";\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result,\r\n            word: this.removeNumbers(result.word)\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n \r\n   removeNumbers(word){\r\n      return getWordwithoutNumbers(word);\r\n   }\r\n  \r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n    const fontSize = localStorage.getItem(\"fontsize\");\r\n    const mystyle = {\r\n          fontSize: fontSize\r\n        };\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n\r\n        <div><h2 style={mystyle} className=\"shadow\">{this.state.word} ({items.bookcode}, p.{items.page}, par.{items.paragraph})</h2><TextToSpeech selectedVoice={this.props.selectedVoice} text={this.state.word}/></div>\r\n\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default Paragraph;\r\n","import React from 'react';\r\nimport Paragraph from '../Paragraph/Paragraph';\r\nimport './slideshow.css';\r\nclass Slides extends React.Component {\r\n constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      booklist: [],\r\n      imagelist: [],\r\n      selectedVoice: 27\r\n    };\r\n  }\r\n  handleOnChange=(e)=> {\r\n    this.setState({\r\n      selectedVoice: e\r\n    });\r\n  }\r\n\r\n componentDidMount() {\r\n\r\n    const url = \"https://gesab001.github.io/assets/egw/images/imagelist.json\";\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            imagelist: result\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n\r\n    const { error, isLoaded, imagelist } = this.state;\r\n    const default_image = \"https://resources.stuff.co.nz/content/dam/images/1/p/i/h/p/2/image.related.StuffLandscapeSixteenByNine.710x400.1pj19x.png/1524876169700.jpg\";\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>; \r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n   return (\r\n        \r\n             <div id=\"demo\" className=\"carousel slide\" keyboard=\"true\" data-wrap=\"false\" data-interval=\"false\">\r\n                  <ul className=\"carousel-indicators\">\r\n<li data-target=\"#demo\" data-slide-to=\"0\" className=\"active\"></li>\r\n{this.props.booklist.map((value,index) =>  {\r\n                       return <li data-target=\"#demo\" data-slide-to={index} key={index}></li>\r\n                    })}\r\n                   \r\n                  </ul>\r\n\r\n                  <div className=\"carousel-inner\">\r\n                        <div className=\"carousel-item active\">\r\n                          <img className=\"d-block w-100\" src={default_image} alt=\"Los Angeles\"/>\r\n                          <div className=\"carousel-caption\">\r\n                            <h3>today</h3>\r\n                            <p>Read now</p>\r\n                          </div>   \r\n                        </div>\r\n        {this.props.booklist.map((value,index) =>  {\r\n             const bookcode = value.bookcode;\r\n             var imageurl = default_image;\r\n             try {\r\n                 var totalimages = imagelist[bookcode].length;\r\n                 var randomindex = Math.floor((Math.random() * totalimages) + 0);\r\n                 imageurl = imagelist[bookcode][randomindex];\r\n                }catch(err){\r\n              }\r\n                       return <div className=\"carousel-item\" key={index}>\r\n                                 <img className=\"d-block w-100\" src={imageurl} alt=\"New York\" />\r\n                                 <div className=\"carousel-caption\">\r\n                                      <h1 className=\"shadow\">{value.title}</h1>\r\n                                      <Paragraph className=\"shadow\" selectedVoice={this.props.selectedVoice} bookcode={value.bookcode} id={getCurrentID(value.bookcode)%value.total}/>\r\n                                 </div> \r\n                             </div>\r\n                    })}\r\n                     \r\n                       \r\n                      </div>\r\n                  <a className=\"carousel-control-prev\" href=\"#demo\" data-slide=\"prev\">\r\n                    <span className=\"carousel-control-prev-icon\"></span>\r\n                  </a>\r\n                  <a className=\"carousel-control-next\" href=\"#demo\" data-slide=\"next\">\r\n                    <span className=\"carousel-control-next-icon\"></span>\r\n                  </a>\r\n                   \r\n             </div>);\r\n\r\n    }\r\n  \r\n  }\r\n}\r\n\r\nfunction getCurrentID(bookcode){\r\n\r\n    var date1 = new Date();\r\n    var date2 = new Date(2018, 5, 22);\r\n    if (bookcode===\"DA\"){\r\n       date2 = new Date(2016, 11, 30);\r\n    }\r\n    if (bookcode===\"CL\"){\r\n       date2 = new Date(2016, 4,15);\r\n    }\r\n    var difference = date1.getTime() - date2.getTime();\r\n    var minutesDifference = Math.floor(difference/1000/60/60/24);\r\n    var currentID=minutesDifference;\r\n    return currentID;\r\n}\r\nexport default Slides;\r\n\r\n/*\r\nNotice that you now have three files in your project:\r\n\"App.js\", \"index.js\", and \"index.html\".\r\n*/\r\n\r\n\r\n","import React from 'react';\r\nimport Slides from './Slides';\r\n\r\n\r\nclass Slideshow extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n    }; \r\n  }\r\n\r\n  componentDidMount() {\r\n\r\n    const url = \"https://gesab001.github.io/assets/egw/booklist.json\";\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result.items\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n\r\n      return (\r\n        <div className=\"container-fluid\"><Slides selectedVoice={this.props.selectedVoice} booklist={items}/></div>\r\n\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default Slideshow;\r\n","import React from 'react';\r\nimport Paragraph from '../Paragraph/Paragraph';\r\nimport './list.css';\r\n\r\nclass List extends React.Component {\r\n constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      booklist: [],\r\n      selectedVoice: 27\r\n    };\r\n  }\r\n  handleOnChange=(e)=> {\r\n    this.setState({\r\n      selectedVoice: e\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n         <div>\r\n \r\n                <div  className=\"card-columns\">  {this.props.booklist.map((value,index) =>  {\r\n                      return <div className=\"card\" key={index} ><div className=\"card-header\"><h5 className=\"card-title\"> {value.title}</h5></div><div className=\"card-body bg-secondary\"><Paragraph className=\"card-text\" selectedVoice={this.props.selectedVoice} bookcode={value.bookcode} id={getCurrentID(value.bookcode)%value.total}/></div></div>\r\n                  })}</div>\r\n         </div>);\r\n  }\r\n}\r\n\r\nfunction getCurrentID(bookcode){\r\n\r\n    var date1 = new Date();\r\n    var date2 = new Date(2018, 5, 22);\r\n    if (bookcode===\"DA\"){\r\n       date2 = new Date(2016, 11, 30);\r\n    }\r\n    if (bookcode===\"CL\"){\r\n       date2 = new Date(2016, 4,15);\r\n    }\r\n    var difference = date1.getTime() - date2.getTime();\r\n    var minutesDifference = Math.floor(difference/1000/60/60/24);\r\n    var currentID=minutesDifference;\r\n    return currentID;\r\n}\r\nexport default List;\r\n\r\n/*\r\nNotice that you now have three files in your project:\r\n\"App.js\", \"index.js\", and \"index.html\".\r\n*/\r\n\r\n\r\n","import React from 'react';\r\nimport List from './List/List';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: []\r\n    }; \r\n  }\r\n\r\n  componentDidMount() {\r\n    const url = \"https://gesab001.github.io/assets/egw/booklist.json\";\r\n    fetch(url)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            items: result.items\r\n          });\r\n        },\r\n        // Note: it's important to handle errors here\r\n        // instead of a catch() block so that we don't swallow\r\n        // exceptions from actual bugs in components.\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items } = this.state;\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      return (\r\n        <List selectedVoice={this.props.selectedVoice} booklist={items}/>\r\n\r\n      );\r\n    }\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Route, Link, BrowserRouter as Router } from 'react-router-dom';\r\nimport Slideshow from './Slideshow/Slideshow';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\nclass Index extends React.Component {\r\n constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      booklist: [],\r\n      selectedVoice: 27,\r\n      slide_font_size: 2\r\n    };\r\n  }\r\n\r\n  updateSelectedVoice=(e)=> {\r\n    this.setState({\r\n      selectedVoice: e\r\n    });\r\n  }\r\n  \r\n  biggerFont=(e)=> {\r\n    const newsize = this.state.slide_font_size + 0.2;\r\n    this.setState({\r\n      slide_font_size: newsize\r\n    }); \r\n    const fontsizestring = newsize + \"vw\";\r\n    localStorage.setItem(\"fontsize\", fontsizestring);\r\n  }\r\n\r\n  smallerFont=(e)=> {\r\n    const newsize = this.state.slide_font_size - 0.2;\r\n    this.setState({\r\n      slide_font_size: newsize\r\n    }); \r\n    const fontsizestring = newsize + \"vw\";\r\n    localStorage.setItem(\"fontsize\", fontsizestring);\r\n  }\r\n\r\n  render() {\r\n\r\n      return (\r\n        <div className=\"container-fluid\">      \r\n          <Router>\r\n            <div>\r\n                <nav className=\"navbar bg-dark navbar-dark  fixed-top\">\r\n\r\n                 \r\n                \r\n                    <ul className=\"nav\">\r\n                      <li className=\"nav-item\">\r\n                          <Link className=\"nav-link\" to={\"/egw-reactjs/\"}>Home</Link>\r\n                      </li> \r\n                      <li className=\"nav-item\">\r\n                          <Link className=\"nav-link\" to={\"/egw-reactjs/slideshow\"}>Slideshow</Link>\r\n                      </li>   \r\n                    \r\n                     \r\n  <li className=\"nav-item\">\r\n                          <button onClick={this.biggerFont.bind(this)}>+</button>\r\n                      </li>\r\n                     <li className=\"nav-item\">\r\n                          <button onClick={this.smallerFont.bind(this)}>-</button>\r\n                      </li>            \r\n                    </ul>\r\n\r\n                </nav>\r\n \r\n              <Route exact path=\"/egw-reactjs/\"  \r\n                     render={(props) => (\r\n                        <App {...props} selectedVoice={this.state.selectedVoice} />\r\n                      )} \r\n              />\r\n              <Route exact path=\"/egw-reactjs/slideshow/\"  \r\n                     render={(props) => (\r\n                        <Slideshow {...props} selectedVoice={this.state.selectedVoice} />\r\n                      )} \r\n              />\r\n            </div>\r\n          </Router>\r\n        </div>\r\n\r\n\r\n      );\r\n  }\r\n}\r\nReactDOM.render(<Index/>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}